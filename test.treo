import reo.fifo1;

test(a?,d!) {

	fifo = <k:int>(a?, b!) { 
		if (k <= 0) { 
			a = b 
		} else {
			fifo[k](a,b)
		}
		for i = 0..k {
			if (i == 0) {
				fifo[0] = (a?,b!) {
					a = b
				}
			} else (i > 0) {
				fifo[i] = (a?,b!) {
					fifo1(a,x) 
					fifo[i-1](x,b)
				}
			}
		}
	}

	Producer = (a?){
		#PR
		identity(;a)
		Java:"nl.cwi.pr.runtime.examples.thesis.basic.Workers.Producer"
		}
	Consumer = (b!){
		#PR
		identity(b;)
		Java:"nl.cwi.pr.runtime.examples.thesis.basic.Workers.Consumer"
		}
	Producer(a)
	Consumer(d)
	fifo<1>(a,d)
}
/*
	recursive<k:int>(a?,b!) {
		if (k==0) {
			a=b 
		} else {
			recursive<k-1>(a,x) 
			fifo1(x,b)		
		}
	}
	
	recursive<2>(a,d)
*/
