import reo.sync;

agent<id:String,updateGps:String,initPos:String,updateB:String,initB:String>(getMove!,getCoord?,getId!,recharge?,readGps!,readBat!){
	core(move,lock1,lock2)	
		sync(move,getMove)
		sync(move,x)
	gps<updateGps,initPos>(read,write)
		sync(getCoord,write)
		sync(read,readGps)
	battery<updateB,initB>(readB,writeB)
		sync(x,writeB)
		sync(recharge,x)
		sync(readB,readBat)
	getId<id>(myId)
		sync(myId,getId)
}	

getId<id:String>(agentId!){
	#RBA
	$m1 = id;
	agentId = $m1 , $m1'=$m1, agentId!=*
}

core(move!,lock1!,lock2!){
	#RBA	
	move = s("L"), move != *, lock1 =*, lock2 !=*
	move = s("D"), move != *, lock1 !=*, lock2 =*
	move = s("U"), move != *, lock1 !=*, lock2 !=*
	move = s("R"), move != *, lock1 =*, lock2 =*
}

gps<write:string,initial:String>(read!, toWrite?) {
	#RBA
	$m = initial;
	
	read = $m , $m != *, $m' = $m, toWrite=*
	toWrite!=*, read=*, $m' = write($m,toWrite) , $m != *
//	toWrite!=*, read!=*, $m' = write($m,toWrite) , read = $m , $m != *
}

battery<write:string,initial:String>(read!, toWrite?) {
	#RBA
	$m = initial;
	
	read = $m , $m != *, $m' = $m, toWrite=*
	toWrite!=*, read=*, $m' = write($m,toWrite) , $m != *
	toWrite!=*, read!=*, $m' = write($m,toWrite) , read = $m , $m != *
}
