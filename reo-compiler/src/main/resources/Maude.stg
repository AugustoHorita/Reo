main(S) ::= <<

 *** Generated from <S.file> by Reo 1.0.

mod CONNECTOR is 
		inc RUNTIMESIGNATURE .
        inc CONSTRAINT-SEMIRING .

	
	<S.components:component(); separator="\n\n">
endm
>>

component(c) ::= <<
<if(c.protocol)><c:protocol()><endif>
>>


protocol(c) ::= <<
subsort String \< Data .
vars <c.variables:{ v | <v> } ; separator=" "> : Data .
<if(c.thVar)>vars <c.thVar:{ v | <v> } ; separator=" "> : Value .
op th : String Value -> Fact .
<endif>
var sl : StepSetList .
op m : Nat Data* -> Fact [ctor] .
op sv : Value -> Step [ctor] .

<c.injection.keys:{ inj | op <inj> : <c.injection.(inj)> . } ; separator="\n">

<c.functions:{ f | <f> } ; separator="\n">

<c.transitions:{t | <if(t.rewString)>
<t.rewString>
<endif> }; separator="">

<!op makestart : Nat Nat -> Facts .
vars i j : Nat .

eq makestart(i,j) = <c.state:{p | <p>}; separator=" "> .!>
eq startc = <c.state:{p | <p>}; separator=" "> .
>>


transition(t) ::= << 
<t.rewString>
>>