main(S) ::= <<

/* Generated from <S.file> by Reo 1.0.*/

#include "runtime.pml"
#include "functions.pml"
#include "agents.pml"

/* port declarations */
<S.components:ports();separator="">

/* memory declarations */
<S.components:memories(); separator="">


<S.components:properties();separator="">

<S.components:component(); separator="">

init {

	atomic{
	<S.components:init(); separator=";\n">
	}
}
>>

memories(c)::=<<
<if(c.protocol)><c.initial.keys:{ m | chan <m.name> = [1] of {bit\}}; separator ="\n"><endif>
>>

component(c) ::= <<
<if(c.protocol)><c:protocol()><endif>
>>

properties(c) ::= <<
<if(c.protocol)>
<c.renamedPorts:{ p | #define <p.name>_fires ((len(<p.name>.trig) != 0 && len(<p.name>.data) != 0) && X(len(<p.name>.trig) == 0 || len(<p.name>.data) == 0)) }; separator ="\n">
<c.initial.keys:{ m | #define <m.name>_fires ((len(<m.name>) != 0 && len(<m.name>) != 0) && X(len(<m.name>) == 0 || len(<m.name>) == 0))}; separator ="\n">

<c.renamedPorts:{ p | #define <p.name>_silent (!(<p.name>_fires)) }; separator ="\n">
<c.initial.keys:{ m | #define <m.name>_silent (!(<m.name>_fires)) }; separator ="\n">
<endif>
>>

protocol(c) ::= <<

proctype <c.name>(<c.renamedPorts:{ p | port n<p.name>}; separator ="; ">){
	<c.initial.keys:{ m | <if(c.initial.(m))><m.name>!1;<endif>  }; separator ="">
	<c.initial.keys:{ m | bit _<m.name>;  }; separator ="\n">
	<c.renamedPorts:{ p | bit _n<p.name> ;}; separator ="\n">
	do
		<c.transitions:transitions(); separator ="\n">
	od

}
>>

ports(c) ::= <<
<if(c.protocol)><c.renamedPorts:{ p | port <p.name>}; separator ="\n"><endif>
>>

init(c) ::= <<
		run <c.name>(<c.renamedPorts:{ p | <p.name>}; separator =",">)	
>>


transitions(t) ::= <<
	:: <t.rewString>
>>